name: Node.js CI - test

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  Build:
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo "Building and testing on development server on branch $GITHUB_REF"
#       - name: Check commit status
#         id: check1
#         uses: ouzi-dev/commit-status-updater@v1.1.0
#         with:
#           status: "pending"
#           addHoldComment: "true"
#           pendingComment: "action pending!"
#           successComment: "action success!"
#           failComment: "action failed!"
#       - if: always()
#         uses: ouzi-dev/commit-status-updater@v1.1.0
#         with:
#           status: "${{ job.status }}"

      - name: AWS Test Configuration
        if: ${{ success() }}
        id: check2
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_S3_BUCKET_USER_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_S3_BUCKET_USER_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_S3_BUCKET_REGION }}
      - name: 'Generate Tag Version'
        id: generate_tag_version
        run: |
          TAG=updated-lambda
          echo "tag=$TAG" >> $GITHUB_OUTPUT
          echo "Tag Version: $TAG" >> $GITHUB_STEP_SUMMARY
      - name: 'Create Zip File'
        id: 'create_package'
        run: |
          PACKAGE_NAME="${{ steps.generate_tag_version.outputs.tag }}.zip"
          echo "package_name=$PACKAGE_NAME" >> $GITHUB_OUTPUT
          zip -r $PACKAGE_NAME .
      - name: 'Create Artifacts'
        id: 'create_artifacts'
        uses: actions/upload-artifact@v2
        with:
          name: 'package'
          path: ${{ github.workspace }}/${{ steps.create_package.outputs.package_name }}

      - name: 'Upload to S3 Bucket'
        run: aws s3 cp ${{ steps.create_package.outputs.package_name }} s3://${{ secrets.AWS_S3_BUCKET_NAME }}
  Deploy:
    needs: Build
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Deploy to Lambda function
        run: aws lambda update-function-code --function-name lambda-test-777 --zip-file fileb://${{ steps.create_package.outputs.package_name }}
        env:
          aws-access-key-id: ${{ secrets.AWS_LAMBDA_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_LAMBDA_USER_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_LAMBDA_REGION }}
